"""
Django settings for pollsapi project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "n*z@*&0ein2+poiu$rhkv2c0a@^2gbzg=g!_e%+dz#2ik5f$g2"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost", ".localhost", "127.0.0.1"]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.TokenAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
}
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",

    "tenants",
    "myApp",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "tenants.middlewares.TenantMiddleware",
]

ROOT_URLCONF = "pollsapi.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "pollsapi.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases


DATABASE_ROUTERS = ["tenants.router.TenantRouter"]

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = "/static/"

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# # ************************************ ADDED_CODE_START **************************************
# # INSTALLED_APPS = [
# #     'jazzmin',
# #     'appName',
# #     ]

# AUTH_USER_MODEL = "polls.MyUser"     # Add User Model Here.
AUTH_USER_MODEL = 'myApp.MyUser'

# DEBUG = True

# # For Production Use : If Model Admin is chanaged then it is in False.
# # DEBUG = False

# # ALLOWED_HOSTS = [] #Default.
# ALLOWED_HOSTS = ['*']

# # ------------------- MEDIA AND STATIC FILES STARTS -----------------
# import os
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles/')

MEDIA_ROOT = os.path.join(BASE_DIR, "Media")
MEDIA_URL = "/Media/"
# # ------------------- MEDIA AND STATIC FILES ENDS --------------------


# # ----------------- Email Settings Starts -------------------------
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'abhilogy151@gmail.com'
EMAIL_HOST_PASSWORD = 'mgbk cdsz loza yhbx'

# # """To Send Email Don't Use Password Create App Password
# #     [ URL: https://myaccount.google.com/apppasswords ]
# #     Name App Password and paste it here.
# # """
# # ----------------- Email Settings Ends -------------------------


# # ------------------ Google Recaptcha Starts --------------------
# """ Process :
#     Step1:- Go to google recaptcha. www.google.com..
#     Step2:- v3
#     Step3:- settings icon
#     Step4:- Add label/Change label
#     Step5:- Add IP address only not url.
# """
# SITE_KEY = '6LeYX9kpAAAAAKyrJ_LDIsh6GbaDMyol6luib8v9'
# SECRET_KEY = '6LeYX9kpAAAAANzL9KJWyaPmH4e98HJmyV4l3akL'
# # ------------------ Google Recaptcha Ends --------------------

# LOGIN_URL = '/login/'

# ************************************ Django Database Settings **************************************

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     "default": {"ENGINE": "django.db.backends.sqlite3", "NAME": "default.db"},
#     "thor": {"ENGINE": "django.db.backends.sqlite3", "NAME": "thor.db"},
#     "potter": {"ENGINE": "django.db.backends.sqlite3", "NAME": "potter.db"},
#     "pixel": {"ENGINE": "django.db.backends.sqlite3", "NAME": "pixel.db"},
# }

# ------------- Store All Details In The .env File or Environmental variables.-----------------.
# Give all models charfield max_length >10. # max_length = 10 : this will occure errors.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'default',
        'USER': 'scott',
        'PASSWORD': 'tiger',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'thor': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'thor',
        'USER': 'scott',
        'PASSWORD': 'tiger',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'pixel': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'pixel',
        'USER': 'scott',
        'PASSWORD': 'tiger',
        'HOST': 'localhost',
        'PORT': '5432',
    },
}
